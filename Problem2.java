package easy.algorithms;

import java.util.ArrayList;
import java.util.List;

public class Problem2 {

	/**
	 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
	 * By starting with 1 and 2, the first 10 terms will be: 
	 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ... 
	 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
	 * find the sum of the even-valued terms. 
	 */
	
	public static void EvenFibonacciNumbers ()
	{
		//the expression for Fibonacci is 
		//Written as a rule, the expression is Xn = Xn-1 + Xn-2.
		
		//find all Fibonacci numbers to 4million 
		//find even numbers in the list and find the summation  
		long summation = 0, fourMillion = 4000000, fibValue = 1; 
		List<Long> fibSequence = new ArrayList<>(); 
			for (int i =0; fibValue <= fourMillion; i++) 
				{
					 if(i <= 2){
						 System.out.println("Fib Value " + i);	
						 fibSequence.add((long)i); 
							if (i % 2 == 0) {
								System.out.println("##Even Value## " + i);	
								summation+=fibValue; 
							}
					 }	
					 else {
							//Xn = Xn-1 + Xn-2 
							fibValue = fibSequence.get(i-1) + fibSequence.get(i-2);  
						    fibSequence.add(fibValue);
							System.out.println("Fib Value " + fibValue);	
							if (fibValue % 2 == 0) {
								System.out.println("##Even Value## " + fibValue);	
								summation+=fibValue; 
							}
					 }
				}
			System.out.println("Summation " + summation); 
	}
	
}
